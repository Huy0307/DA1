#include <Adafruit_SSD1306.h>
#include <Adafruit_MLX90614.h>
#include <DS1307RTC.h>
#include <Fingerprint.h>
#include <SD.h>
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);
Adafruit_MLX90614 mlx = Adafruit_MLX90614();
byte buttonPin = 2;  // Sử dụng chân số 13 để kết nối với nút bấm
byte enPin = 4;
byte sensorPin = 5;
byte buzzer = 8;
byte mode = 2;
float tempC;
uint8_t id;
uint8_t finger_id;
volatile bool buttonPressed = true;
void delay_millis(unsigned long ms) {
  unsigned long current_time = millis();  // Lấy thời điểm hiện tại
  while (millis() - current_time < ms) {  // Kiểm tra nếu thời gian chạy đã vượt quá khoảng thời gian cần delay
    // Chờ
  }
}

void setup() {
  Serial.begin(230400);
  fingerprintSetup();
  pinMode(sensorPin, INPUT);
  // pinMode(10, OUTPUT);
  pinMode(buzzer, OUTPUT);
  pinMode(buttonPin, INPUT_PULLUP);  // Đặt chân số 2 là INPUT_PULLUP để kết nối nút bấm
  attachInterrupt(digitalPinToInterrupt(buttonPin), buttonInterrupt, RISING);
  digitalWrite(buzzer, LOW);
  pinMode(enPin, OUTPUT);
  // Kích hoạt cảm biến bằng cách đưa chân EN lên mức HIGH
  digitalWrite(enPin, HIGH);
  // Initialize display
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  delay_millis(2000);
  if (!SD.begin(10)) {
    return;
  }

  // Initialize I2C
  Wire.begin();

  mlx.begin();
}
void buttonInterrupt() {
  buttonPressed = false;
}
void loop() {
  byte buttonState = digitalRead(buttonPin);
  if (buttonPressed == false && buttonState == LOW) {
    buttonPressed = true;
    mode++;
    if (mode > 3) {
      mode = 1;
    }
    Serial.println(mode);
    delay_millis(1000);
  }
  // Check if object detected by YS-29 sensor
  // Display current time
  tmElements_t tm;
  if (RTC.read(tm)) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 0);
    display.print("Time: ");
    display.print(tm.Hour);
    display.print(":");
    display.print(tm.Minute);
    display.print(":");
    display.println(tm.Second);
    display.display();
    delay_millis(1000);
  }
  byte sensorValue = digitalRead(sensorPin);
  if (sensorValue == LOW) {
    tempC = mlx.readObjectTempC();
    digitalWrite(buzzer, HIGH);
    delay_millis(250);
    digitalWrite(buzzer, LOW);
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 10);
    display.print("Temp: ");
    display.print(tempC);
    display.println(" C");
    // Update OLED display
    display.display();
    delay_millis(1000);
  }
  if (mode == 1) {
    id = readnumber();
    if (id == 0) {  // ID #0 not allowed, try again!
      return;
    }
    getFingerprintEnroll(id);
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 10);
    display.println("ENROLLED!!");
    display.display();
    delay_millis(1000);
  }
  if (mode == 2) {
    getFingerprintID(finger_id);
    if (finger_id != 0) {
      display.clearDisplay();
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(0, 10);
      display.println("Found a print match!");
      display.println("Match found ID ");
      display.print(finger_id);
      display.display();
      delay_millis(1000);
    }
    finger_id = 0;
  }
  if (mode == 3) {
    id = readnumber();
    if (id == 0) {  // ID #0 not allowed, try again!
      return;
    }
    deleteFingerprint(id);
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 10);
    display.println("DELETED!");
    display.display();
    delay_millis(1000);
  }
  File dataFile = SD.open("data.csv", FILE_WRITE);  // Mở file data.txt và chế độ ghi
  if (dataFile) {                                   // Nếu file đã được mở
    dataFile.print(id);                             // Lưu id vào file
    dataFile.print(",");                            // Phân cách giữa id và tempC
    dataFile.print(tempC);                          // Lưu tempC vào file
    dataFile.println();                             // Xuống dòng để lưu thông tin tiếp theo
    dataFile.close();                               // Đóng file
  } else {
    return;
    // Serial.println("Error opening file");  // In ra thông báo lỗi nếu không mở được file
  }
}